
import {HttpClient} from '@angular/common/http';

///////////
import {Observable} from 'rxjs';
import {tap, map, catchError} from 'rxjs/operators';

////////////
import { HttpClientModule } from '@angular/common/http';

/////////////
    productUrl:string = 'api/products/products.json';


/////////////
    private handleError(error: HttpErrorResponse) {
    if (error.error instanceof ErrorEvent) {
      // A client-side or network error occurred. Handle it accordingly.
      console.error('An error occurred:', error.error.message);
    } else {
      // The backend returned an unsuccessful response code.
      // The response body may contain clues as to what went wrong,
      console.error(
        `Backend returned code ${error.status}, ` +
        `body was: ${error.error}`);
    }
    // return an observable with a user-facing error message
    return throwError(
      'Something bad happened; please try again later.');
  };


////////
import {HttpClient, HttpErrorResponse} from '@angular/common/http';
import {Observable, throwError} from 'rxjs';


////////
    this.productService.getProducts().subscribe(
      
      products => {
        this.products = products;
        this.filteredProducts = this.products;
      },
      error => this.errorMessage = <any>error
    );
